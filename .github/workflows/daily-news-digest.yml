name: 🤖 AI-Powered Daily News Digest & Website

on:
  schedule:
    # Run daily at 5:00 AM UTC (6:00 AM BST / 5:00 AM GMT)
    # This ensures 6 AM UK time during British Summer Time
    - cron: '0 5 * * *'
  push:
    branches: [ main ]  # Trigger on main branch pushes for development
    paths:
      - 'docs/**'
      - '*.py'
      - 'requirements.txt'
      - '.github/workflows/**'
  workflow_dispatch: # Allow manual triggering
    inputs:
      debug_mode:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean
      force_ai_regeneration:
        description: 'Force AI analysis even if today content exists (costs API credits)'
        required: false
        default: false
        type: boolean
      deploy_only:
        description: 'Skip AI generation, just redeploy existing content'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  generate-ai-digest:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: read
      issues: write  # For creating issues on failures
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main  # Develop and deploy from main branch
        token: ${{ secrets.GITHUB_TOKEN }}
        lfs: true  # Enable Git LFS checkout
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install openai anthropic  # Multiple AI providers
    
    - name: 🔍 Check if today's content exists
      id: check_content
      run: |
        TODAY=$(date +%Y_%m_%d)
        # Check for English content in new structure
        EN_AUDIO_FILE="docs/en_GB/audio/news_digest_ai_${TODAY}.mp3"
        EN_TEXT_FILE="docs/en_GB/news_digest_ai_${TODAY}.txt"
        
        if [[ -f "$EN_AUDIO_FILE" && -f "$EN_TEXT_FILE" ]]; then
          echo "content_exists=true" >> $GITHUB_OUTPUT
          echo "✅ Today's English content already exists: $EN_AUDIO_FILE, $EN_TEXT_FILE"
        else
          echo "content_exists=false" >> $GITHUB_OUTPUT
          echo "📝 English content missing - will generate:"
          [[ ! -f "$EN_AUDIO_FILE" ]] && echo "   ❌ Missing: $EN_AUDIO_FILE"
          [[ ! -f "$EN_TEXT_FILE" ]] && echo "   ❌ Missing: $EN_TEXT_FILE"
        fi
        
        echo "today_date=$TODAY" >> $GITHUB_OUTPUT
    
    - name: 🤖 Generate AI-Enhanced News Digest
      # CRITICAL: Only run AI generation if content doesn't exist OR explicitly forced
      # This prevents unnecessary API costs on push events
      if: steps.check_content.outputs.content_exists == 'false' || inputs.force_ai_regeneration == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        DEBUG_MODE: ${{ github.event.inputs.debug_mode }}
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          echo "🚀 Push-triggered build: Deploying UX improvements..."
          echo "💰 Cost optimization: Will only generate AI content if missing"
        elif [ "${{ github.event_name }}" = "schedule" ]; then
          echo "⏰ Scheduled build: Daily news digest generation..."
          echo "💰 This step uses API credits - content_exists: ${{ steps.check_content.outputs.content_exists }}"
        else
          echo "🔧 Manual workflow: Custom parameters applied"
          echo "💰 This step uses API credits - content_exists: ${{ steps.check_content.outputs.content_exists }}"
        fi
        python github_ai_news_digest.py --language en_GB
        echo "✅ Digest generation completed"
    
    - name: ⚡ Skip AI Generation (Cost Optimization)
      if: steps.check_content.outputs.content_exists == 'true' && inputs.force_ai_regeneration != 'true'
      run: |
        echo "💰 COST OPTIMIZATION: Skipping AI generation"
        echo "✅ Today's content already exists: ${{ steps.check_content.outputs.today_date }}"
        echo "📊 Estimated savings: \$0.50-\$2.00 per skip"
        echo "💡 Use 'force_ai_regeneration: true' to override if needed"
        if [ "${{ github.event_name }}" = "push" ]; then
          echo "🚀 Push event: Deploying code improvements without regenerating content"
        elif [ "${{ github.event_name }}" = "schedule" ]; then
          echo "⏰ Scheduled event: Content exists, no regeneration needed"
        else
          echo "🔄 Will redeploy existing content with any improvements"
        fi
    
    - name: 📊 Analyze generated content
      run: |
        if [ -f news_digest_ai_*.mp3 ]; then
          echo "🎧 Audio file generated successfully"
          ls -lh news_digest_ai_*.mp3
        fi
        if [ -f news_digest_ai_*.txt ]; then
          echo "📄 Text file generated successfully"
          wc -w news_digest_ai_*.txt
        fi
    
    - name: 🌐 Update website with new content
      run: |
        echo "🌐 Updating English language website page..."
        python update_language_website.py --language en_GB
        echo "✅ English website page updated with today's digest"
    
    - name: 📱 Verify audio files in correct location
      run: |
        # Check if audio files are in the correct language-specific directory
        if ls docs/en_GB/audio/news_digest_ai_*.mp3 1> /dev/null 2>&1; then
          echo "🎧 Audio files found in correct location:"
          ls -la docs/en_GB/audio/news_digest_ai_*.mp3
        else
          echo "⚠️ No audio files found in docs/en_GB/audio/"
          echo "🔍 Checking for files in wrong location..."
          if ls news_digest_ai_*.mp3 1> /dev/null 2>&1; then
            echo "📁 Moving audio files to correct location..."
            mkdir -p docs/en_GB/audio
            mv news_digest_ai_*.mp3 docs/en_GB/audio/
            echo "✅ Audio files moved to docs/en_GB/audio/"
          fi
        fi
        
        # Check text files
        if ls docs/en_GB/news_digest_ai_*.txt 1> /dev/null 2>&1; then
          echo "📄 Text files found in correct location:"
          ls -la docs/en_GB/news_digest_ai_*.txt
        else
          echo "⚠️ No text files found in docs/en_GB/"
          if ls news_digest_ai_*.txt 1> /dev/null 2>&1; then
            echo "📁 Moving text files to correct location..."
            mv news_digest_ai_*.txt docs/en_GB/
            echo "✅ Text files moved to docs/en_GB/"
          fi
        fi
    
    - name: 🔍 Quality check
      run: |
        # Check if files were generated
        if [ ! -f news_digest_ai_*.mp3 ]; then
          echo "❌ No audio file generated"
          exit 1
        fi
        
        # Check audio file size (should be > 100KB for meaningful content)
        audio_size=$(stat -c%s news_digest_ai_*.mp3)
        if [ $audio_size -lt 100000 ]; then
          echo "⚠️ Audio file seems too small: ${audio_size} bytes"
        else
          echo "✅ Audio file size OK: ${audio_size} bytes"
        fi
        
        # Check if website was updated
        if [ ! -f docs/index.html ]; then
          echo "❌ Website index.html missing"
          exit 1
        fi
        
        echo "✅ Quality checks passed"
    
    - name: 📝 Commit generated files
      run: |
        git config --local user.email "ai-digest@github.com"
        git config --local user.name "AI News Digest Bot"
        
        # Add ONLY language-specific files to avoid conflicts
        # This prevents touching the root index.html and other development files
        git add docs/en_GB/ || true
        
        # Also add any files that might be in wrong location (for backward compatibility)
        git add news_digest_ai_*.mp3 news_digest_ai_*.txt 2>/dev/null || true
        
        # Create commit with date and stats
        if git diff --staged --quiet; then
          echo "💰 COST OPTIMIZATION: No new files to commit - content already exists"
          echo "📊 Estimated API cost savings: \$0.50-\$2.00"
        else
          # Check if we have audio files to get stats
          if ls docs/en_GB/audio/news_digest_ai_*.mp3 1> /dev/null 2>&1; then
            audio_file=$(ls docs/en_GB/audio/news_digest_ai_*.mp3 | head -1)
            audio_size=$(stat -c%s "$audio_file" | numfmt --to=iec)
          else
            audio_size="Unknown"
          fi
          git commit -m "🤖 Daily AI news digest & website update $(date +%Y-%m-%d)

          📊 Generated: $(date '+%Y-%m-%d %H:%M UTC')
          🎧 Audio: ${audio_size}
          🤖 AI: Enhanced analysis
          🌐 Website: Updated with accessible newspaper layout
          ♿ Accessibility: Optimized for visually impaired users"
          
          git push
          echo "✅ Files committed and pushed successfully"
        fi
    
    - name: 📤 Upload artifacts for download
      uses: actions/upload-artifact@v4
      with:
        name: ai-news-digest-${{ github.run_number }}
        path: |
          news_digest_ai_*.mp3
          news_digest_ai_*.txt
          docs/
        retention-days: 90
    
    - name: 🏷️ Create release for audio file
      if: success() && (github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.force_ai_regeneration == 'true'))
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: daily-${{ steps.check_content.outputs.today_date }}
        name: 🎧 Daily AI News Digest - ${{ steps.check_content.outputs.today_date }}
        body: |
          🤖 **AI-Enhanced News Digest**
          📅 Generated: ${{ github.event.head_commit.timestamp }}
          
          ### 🎯 Features
          - ✅ Claude 4.5 Sonnet AI analysis
          - ✅ Multi-source UK news synthesis  
          - ✅ Irish Emily Neural voice (premium quality)
          - ✅ WhatsApp-ready MP3 format
          - ✅ Copyright-compliant synthesis
          - ✅ Accessible newspaper website
          
          ### 📥 Access Options
          - **🌐 Website**: [Daily News Digest](https://audionews.uk)
          - **Audio**: `news_digest_ai_*.mp3` - Ready for WhatsApp sharing
          - **Text**: `news_digest_ai_*.txt` - Full transcript with sources
          
          Perfect for visually impaired users! 🎧♿
        draft: false
        prerelease: false
        files: |
          news_digest_ai_*.mp3
          news_digest_ai_*.txt
    
    - name: ❌ Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🚨 Daily AI Digest Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `### ❌ AI News Digest Generation Failed
            
            **Run**: ${context.runId}
            **Date**: ${new Date().toISOString()}
            **Workflow**: ${context.workflow}
            
            Please check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.
            
            ### Possible Issues:
            - API key expired or missing
            - Network connectivity issues
            - News source changes
            - Audio generation failure
            - Website update failure
            
            This needs immediate attention for accessibility service continuity.`,
            labels: ['bug', 'ai-digest', 'urgent']
          })

  deploy-website:
    needs: generate-ai-digest
    runs-on: ubuntu-latest
    if: success()
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main  # Deploy from main branch
        lfs: true  # Enable Git LFS checkout
    
    - name: 📦 Pull LFS files
      run: |
        echo "🔍 Checking LFS files before pull..."
        ls -la docs/audio/*.mp3 || echo "No audio files found"
        echo "🔄 Pulling LFS files..."
        git lfs pull
        echo "✅ LFS files after pull:"
        ls -la docs/audio/*.mp3 || echo "No audio files found"
    
    - name: 🔧 Setup Pages
      uses: actions/configure-pages@v5
    
    - name: 📦 Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
    
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  notify-completion:
    needs: [generate-ai-digest, deploy-website]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: 🎉 Success notification
      run: |
        if [ "${{ github.event_name }}" = "push" ]; then
          echo "🚀 Push-triggered deployment completed successfully!"
          echo "📅 Date: $(date)"
          echo "🌐 Website deployed with UX improvements"
          echo "💰 Cost optimized: No unnecessary AI regeneration"
          echo "♿ Accessibility service operational"
        elif [ "${{ github.event_name }}" = "schedule" ]; then
          echo "⏰ Scheduled daily digest completed successfully!"
          echo "📅 Date: $(date)"
          echo "🎧 Audio ready for visually impaired users"
          echo "🤖 AI analysis completed"
          echo "🌐 Accessible website deployed"
          echo "♿ Accessibility service operational"
        else
          echo "🔧 Manual workflow completed successfully!"
          echo "📅 Date: $(date)"
          echo "🎧 Audio ready for visually impaired users"
          echo "🤖 AI analysis completed"
          echo "🌐 Accessible website deployed"
          echo "♿ Accessibility service operational"
        fi
        echo ""
        echo "🔗 Website: https://audionews.uk"
